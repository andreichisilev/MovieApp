@* @model List<CardActorVm>
<section class="row">
    <article class="me-2">
        <h4>Actors</h4>
    </article>
    <section class="row">
        @if (Model.Count() > 0)
        {
            @foreach (var item in Model)
            {
                <article class="col-4 mb-3">
                    @await Html.PartialAsync("Actor/_Card", item)
                </article>
            }
        }
        else
        {
            <article class="alert alert-warning" role="alert">There is no contact info registered!</article>
        }
    </section>
</section> *@
@model ContactInfoVm

@{
    ViewData["Title"] = "Contact Info";
}

<h1>@Html.DisplayFor(model => model.Name)</h1>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AgentPhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AgentPhoneNumber)
        </dd>
    </dl>
</div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}